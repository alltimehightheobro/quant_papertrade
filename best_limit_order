!pip install pybithumb

from pybithumb import Bithumb
import pandas as pd
import requests

url = "https://api.bithumb.com/public/orderbook/STX_KRW"

headers = {"accept": "application/json"}

response = requests.get(url, headers=headers)

# JSON 응답을 딕셔너리로 변환
data = response.json()['data']

# bids와 asks의 데이터를 딕셔너리로 추출
bids_data = data['bids']
asks_data = data['asks']

# bids와 asks 데이터프레임 생성
bids_df = pd.DataFrame(bids_data, columns=['price', 'quantity'])
asks_df = pd.DataFrame(asks_data, columns=['price', 'quantity'])

# 각 데이터프레임에 'type' 열 추가 및 값 설정
bids_df['type'] = 'bid'
asks_df['type'] = 'ask'

# bids와 asks 데이터프레임을 합쳐 최종 데이터프레임 생성
final_df = pd.concat([bids_df, asks_df], ignore_index=True)

# quantity가 1000 이상인 행만 필터링하여 새로운 데이터프레임 생성
filtered_df = final_df[final_df['quantity'].astype(float) > 1000]

# ask 호가들 중 quantity가 1000 이상인 데이터프레임을 필터링
bid_df = filtered_df[(filtered_df['type'] == 'bid') & (filtered_df['quantity'].astype(float) > 1000)]

# price를 숫자형으로 변환
bid_df['price'] = bid_df['price'].astype(float)

# 1원씩 더한 호가들의 리스트 생성
expensive_bid_list = sorted(bid_df['price'].unique() + 1, reverse=True)

print(expensive_bid_list)

bithumb = Bithumb("Api", "Secret")

for price in expensive_bid_list:
  desc = bithumb.buy_limit_order("STX", str(price), 3)
